.geolocation-yform {

    @media (min-width: $screen-lg-min) {

        > div:not(.alert) > *:not(.control-label),
        > fieldset > div:not(.alert) > *:not(.control-label):not(.btn-toolbar) {


            width: calc(100% - #{$component-offset-horizontal + $table-cell-padding});
            margin-left: $component-offset-horizontal;
        }

        div.rex-form-panel-footer > div.btn-toolbar {
            width: 100%;
            margin-left: 0;
        }

        > div > .control-label,
        > fieldset > div > .control-label {
            width: $component-offset-horizontal;
            padding-right: $table-cell-padding;
            float: left;
            clear:both;
        }

    }

}

/**
 * CSS für das Custom-HTMLElement "geolocation-layerselect"
 * Die Struktur des Markup, auf die sich diese CSS-Formate beziehen,
 * ist im YTemplate "value.layerselect.tpl.php" zu finden.
 * 
 * Damit die .list-group und ihre .list-group-items optisch besser in die
 * Formular-Formate passen, werden padding und margin etwas korrigiert.
 * 
 * Die Mindesthähe von 50px ist nur gschätzt mangels valider Erkenntnisse
 * zur Berechnung der Mindesthöhe bzw. der automatischen Anpassung.
 */
geolocation-layerselect {

    $geolocation-layerset-padding: ($padding-base-horizontal / 2);
    $geolocation-layerset-widget-height: 50px;

    display: block;

    .form-control {
        min-height: $geolocation-layerset-widget-height;
        padding-left: $geolocation-layerset-padding;
        padding-right: $geolocation-layerset-padding;

        .list-group {
            margin: 0;
    
            // Platz schaffen für den "hat Focus"-Rahmen
            :not(:last-child) {
                margin-bottom:1px;
            }
    
            .list-group-item {
                padding: $padding-xs-vertical $geolocation-layerset-padding;

                // Up/Down-Button nur wenn es auch eine Zeile darüber/darunter gibt
                &:first-of-type gelocation-trigger[event$=".up"],
                &:last-of-type gelocation-trigger[event$=".down"] {
                    visibility: hidden;
                }
            
            }
        
        }

        // Text hinter der Listgroup wird nur sichtbar, wenn die Liste leer ist.
        p {
            position:absolute;
            top: (($geolocation-layerset-widget-height - $line-height-computed) / 2);
            padding-left: $geolocation-layerset-padding;
            color: $color-a;
        }
    }

    
    // Den select aus dem Original-Widget unsichtbar halten, da nur
    // funktional für das YForm-Popup nötig.
    select[id^="YFORM_DATASETLIST_SELECT_"] {
        display: none;
    }

}

body.rex-theme-dark geolocation-layerselect [geolocation-layer-empty] {
    color: $color-text-light-inactive;
}
@media (prefers-color-scheme: dark) {
    body.rex-has-theme:not(.rex-theme-light) geolocation-layerselect [geolocation-layer-empty] {
        color: $color-text-light-inactive;
    }
}

/**
 * Die per Tab selektierbaren Elemente farblich so kennzeichnen
 * wie andere tab-bare Formularelemente auch.
 */ 
/* dark: $color-blue-2*/
@mixin geolocation-focus-dark ($color) {
    $color-rgba: rgba(red($color), green($color), blue($color), .6);
    &:focus {
      border-color: $color !important;
      outline: 0;
      box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px $color-rgba;
    }
}
geolocation-layerselect-item {
    @include  geolocation-focus-dark ($input-border-focus);
}

geolocation-layerselect .btn-popup {
    @include  geolocation-focus-dark ($input-border-focus);
}

body.rex-theme-dark {
    geolocation-layerselect-item,
    geolocation-layerselect .btn-popup {
        @include  geolocation-focus-dark ($color-blue-2);
    }
}
@media (prefers-color-scheme: dark) {
    body.rex-has-theme:not(.rex-theme-light) {
        geolocation-layerselect-item,
        geolocation-layerselect .btn-popup {
            @include  geolocation-focus-dark ($color-blue-2);
        }
    }
}

/**
 * CSS für geolocation-geocoder-search
 * Damit wird die Liste mit den Suchergebnissen über den darunter liegenden
 * Elementen aufgeblendet
 *
 * Außerdem gibt es die .wide-Klasse. Darüber erhält der Such-Button einen alternativen
 * Text (Lupe), der bei breitem Screen (@media (min-width: 800px, siehe unten)
 * ausgeblendet und durch den vollen Button-Titel ersetzt wird.
 */

geolocation-geocoder-search {

    > .geolocation-geocoder-search-result {
        position: relative;
        z-index: 1500;

        > .list-group {
            position: absolute;
            width: 100%
        }
    }

    span.wide {
        display: none;

        ~i {
            display: inline;
        }
    }
}


/**
 * GeoPicker-Widget zur Auswahl eine Kartenposition
 * Repräsentiert durch den Cuatom-Tag <geolocation-geopicker>
 *
 * Die Innen liegenden Elemente werden als Grid positioniert
 * und je nach Breite der Darstellung übereinander oder untereinander.
 * Die innen liegenden Eingabefelder für Breite/Länge sind ebenfalls
 * ein Grid, in dem Label und Input ja nach Anzeigebreite über- oder
 * nebeneinander stehen.
 */
.geolocation-geopicker-grid {

    display: grid !important;
    grid-template-areas: 
        "search"
        "lat"
        "lng"
        "map";
    grid-gap: 5px;
    border: 1px solid black;

    geolocation-geocoder-search {
        grid-area: search;
    }
    
    .geolocation-geopicker-lat {
        grid-area: lat;
    }
    
    .geolocation-geopicker-lng {
        grid-area: lng;
    }
    
    rex-map {
        grid-area: map;
        width: 100%;
        min-height:500px;
        border: 1px solid black;
        background-color: darkgrey;
    }
    
    .geolocation-geopicker-lat, .geolocation-geopicker-lng {
        display: grid;
        grid-template-areas: "label" "input";
        grid-template-columns: 1fr;
    }
    
    .geolocation-geopicker-lat label, .geolocation-geopicker-lng label {
        grid-area: label;
    }
    
    .geolocation-geopicker-lat input, .geolocation-geopicker-lng input {
        grid-area: input;
    }   
    
}

@media (min-width: 800px) {
    .geolocation-geopicker-grid {
        grid-template-areas: 
            "search search"
            "lat lng"
            "map map";

        .geolocation-geopicker-lat, .geolocation-geopicker-lng {
            grid-template-areas: "label input";
            grid-template-columns: 10rem 1fr;
        }
    }

    geolocation-geocoder-search {

        span.wide {
            display: inline;

            ~i {
                display: none;
            }
        }

    }
    

}

@media (min-width: 1500px) {
    .geolocation-geopicker-grid {
        grid-gap: 10px 5px;
        grid-template-areas: 
            "search map"
            "lat map"
            "lng map"
            " . map";
        grid-template-columns: 2fr 3fr;
    }
}

